<?php
/**
 * AggregationApiTest
 * PHP version 5
 *
 * @category Class
 * @package  com\hydrogen\integration
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Hydrogen Integration API
 *
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.2.1
 * Contact: info@hydrogenplatform.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.18
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace com\hydrogen\integration;

use \com\hydrogen\integration\Configuration;
use \com\hydrogen\integration\ApiException;
use \com\hydrogen\integration\ObjectSerializer;

/**
 * AggregationApiTest Class Doc Comment
 *
 * @category Class
 * @package  com\hydrogen\integration
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AggregationApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for createAggregationAccountUsingPost
     *
     * Create mapping between client,vendor,tenant.
     *
     */
    public function testCreateAggregationAccountUsingPost()
    {
    }

    /**
     * Test case for createPropertyValueUsingPost
     *
     * Create mapping between client,vendor,tenant for the property.
     *
     */
    public function testCreatePropertyValueUsingPost()
    {
    }

    /**
     * Test case for deleteAggregationAccountUsingDelete
     *
     * De-Link mapping between client,vendor,tenant.
     *
     */
    public function testDeleteAggregationAccountUsingDelete()
    {
    }

    /**
     * Test case for getAggregationAccountAllUsingGet
     *
     * Fetch all aggregation account(s) details with the mapping created in POST endpoint for a client.
     *
     */
    public function testGetAggregationAccountAllUsingGet()
    {
    }

    /**
     * Test case for getAggregationAccountBalanceAllUsingGet
     *
     * Fetch all aggregation account balance details with for the given aggregation accounts.
     *
     */
    public function testGetAggregationAccountBalanceAllUsingGet()
    {
    }

    /**
     * Test case for getAggregationAccountBalanceUsingGet
     *
     * Fetch aggregation account balance details with the mapping created in POST endpoint.
     *
     */
    public function testGetAggregationAccountBalanceUsingGet()
    {
    }

    /**
     * Test case for getAggregationAccountHoldingAllUsingGet
     *
     * Fetch all aggregation account(s) holding details with the mapping created in POST endpoint.
     *
     */
    public function testGetAggregationAccountHoldingAllUsingGet()
    {
    }

    /**
     * Test case for getAggregationAccountHoldingUsingGet
     *
     * Fetch aggregation account holding details with the mapping created in POST endpoint.
     *
     */
    public function testGetAggregationAccountHoldingUsingGet()
    {
    }

    /**
     * Test case for getAggregationAccountTransactionAllUsingGet
     *
     * Fetch all aggregation account balance details with for the given aggregation accounts.
     *
     */
    public function testGetAggregationAccountTransactionAllUsingGet()
    {
    }

    /**
     * Test case for getAggregationAccountTransactionUsingGet
     *
     * Fetch aggregation account transaction details with the mapping created in POST endpoint.
     *
     */
    public function testGetAggregationAccountTransactionUsingGet()
    {
    }

    /**
     * Test case for getAggregationAccountUsingGet
     *
     * Fetch aggregation account details with the mapping created in POST endpoint.
     *
     */
    public function testGetAggregationAccountUsingGet()
    {
    }

    /**
     * Test case for getPropertyValue
     *
     * Get Value of the given property.
     *
     */
    public function testGetPropertyValue()
    {
    }
}
